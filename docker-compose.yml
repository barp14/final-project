services:
  auth-api:
    build: 
      context: ./auth-api
      dockerfile: Dockerfile
    container_name: auth-api
    ports:
      - "8000:80"
    networks:
      - app-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=project
      - DB_USERNAME=project_user
      - DB_PASSWORD=932545
    volumes:
      - ./auth-api:/var/www/html
    depends_on:
      - db
      - redis
    command: /bin/sh -c "composer install && apache2-foreground"

  record-api:
    build:
      context: ./record-api
      dockerfile: Dockerfile
    container_name: record-api
    ports:
      - "5001:5001"
    networks:
      - app-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=project
      - DB_USERNAME=project_user
      - DB_PASSWORD=932545
    depends_on:
      - db
      - redis
    command: ["/wait-for-it.sh", "db:3306", "--", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "5001"]

  receive-send-api:
    build: 
      context: ./receive-send-api
      dockerfile: Dockerfile
    container_name: receive-send-api
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=project
      - MYSQL_USER=project_user
      - DB_PASSWORD=932545
      - AUTH_API_URL=http://auth-api-php:8000/api
      - RECORD_API_URL=http://record-api:5000/message
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    image: mysql:8.0
    container_name: db
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: project
      MYSQL_USER: project_user
      MYSQL_PASSWORD: "932545"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
