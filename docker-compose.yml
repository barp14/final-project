version: '3.8'

services:
  auth-api:
    build: 
      context: ./auth-api
    container_name: auth-api
    ports:
      - "8000:80"
    networks:
      - app-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=project
      - DB_USERNAME=project_user
      - DB_PASSWORD=932545
    volumes:
      - ./auth-api:/var/www/html
    depends_on:
      - db
      - redis
    command: /bin/sh -c "composer install && apache2-foreground"

  record-api:
    build:
      context: ./record-api
    container_name: record-api
    ports:
      - "5000:5000"
    networks:
      - app-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=project
      - DB_USERNAME=root
      - DB_PASSWORD=932545
    depends_on:
      - db
      - redis

  receive-send-api:
    build: 
      context: ./receive-send-api
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=project
      - MYSQL_USER=project_user
      - DB_PASSWORD=932545
      - AUTH_API_URL=http://auth-api-php:80
      - RECORD_API_URL=http://record-api-url
    depends_on:
      - db
      - redis

  db:
    image: mysql:5.7
    container_name: auth-api-db
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: project
      MYSQL_USER: project_user
      MYSQL_PASSWORD: "932545"
    # volumes:
    #   - db_data:/var/lib/mysql
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
